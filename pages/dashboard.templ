package pages

import (
    "lawas-go/dto"
    "lawas-go/models"
    "lawas-go/components"
    "strconv"
    "fmt"
    "math"
    "time"
)

templ Dashboard(token dto.Token, isLoggedIn bool) {

    @components.Layout(token, isLoggedIn, "My Account") {
        <div class="container">
            <div class="intro-slider-container  mb-1" style="height: fit-content;">
                // <div class="col-lg-8">
                    <div class="header-4 page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
                        <div class="container">
                            <h1 class="page-title">My Account</h1>
                        </div><!-- End .container -->
                    </div><!-- End .page-header -->
                // </div>
            </div>            
        </div>  
        <nav aria-label="breadcrumb" class="breadcrumb-nav mb-3">
            <div class="container">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">My Account</li>
                </ol>
            </div><!-- End .container -->
        </nav><!-- End .breadcrumb-nav -->

        <div class="page-content">
            <div class="dashboard">
                <div class="container">
                    <div class="row">
                        <aside class="col-md-4 col-lg-3">
                            <ul class="nav nav-dashboard flex-column mb-3 mb-md-0" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="tab-dashboard-link" data-toggle="tab" href="#tab-dashboard" role="tab" aria-controls="tab-dashboard" aria-selected="true">Dashboard</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-sells-link" data-toggle="tab" href="#tab-sells" 
                                        role="tab" aria-controls="tab-sells" aria-selected="false"
                                        hx-get="/my-sells"               
                                        hx-swap="innerHtml"
                                        hx-target="#tab-sells"
                                        hx-indicator=".htmx-loader"
                                    >Offers</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-bids-link" data-toggle="tab" href="#tab-bids" role="tab" aria-controls="tab-bids" aria-selected="false"
                                        hx-get="/my-bids"               
                                        hx-swap="innerHtml"
                                        hx-target="#tab-bids"
                                        hx-indicator=".htmx-loader"
                                    >Bids</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-watchs-link" data-toggle="tab" href="#tab-watchs" role="tab" aria-controls="tab-watchs" aria-selected="false"
                                        hx-get="/my-watchs"               
                                        hx-swap="innerHtml"
                                        hx-target="#tab-watchs"
                                        hx-indicator=".htmx-loader"
                                    >Watchlist</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-address-link" data-toggle="tab" href="#tab-address" role="tab" aria-controls="tab-address" aria-selected="false">Adresses</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="tab-account-link" data-toggle="tab" href="#tab-account" role="tab" aria-controls="tab-account" aria-selected="false">Account Details</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="/logout">Sign Out</a>
                                </li>
                            </ul>
                        </aside><!-- End .col-lg-3 -->

                        <div class="col-md-8 col-lg-9">
                            <div class="tab-content">
                                <div class="tab-pane fade show active" id="tab-dashboard" role="tabpanel" aria-labelledby="tab-dashboard-link">
                                    <p>Hello <span class="font-weight-normal text-dark">{token.Name}</span> (not <span class="font-weight-normal text-dark">{token.Name}</span>? <a href="#">Log out</a>) 
                                    <br>
                                    From your account dashboard you can view your <a href="#tab-sells" class="tab-trigger-link link-underline">recent bids & offers</a>, manage your <a href="#tab-address" class="tab-trigger-link">shipping and billing addresses</a>, and <a href="#tab-account" class="tab-trigger-link">edit your password and account details</a>.</p>
                                </div><!-- .End .tab-pane -->

                                <div class="tab-pane fade" id="tab-sells" role="tabpanel" aria-labelledby="tab-sells-link">
                                    <p>No sells has been made yet.</p>
                                    <a href="/sell" class="btn btn-outline-primary-2"><span>GO SELL</span><i class="icon-long-arrow-right"></i></a>
                                </div><!-- .End .tab-pane -->

                                <div class="tab-pane fade" id="tab-bids" role="tabpanel" aria-labelledby="tab-bids-link">
                                    <p>No bid has been made yet.</p>
                                    <a href="/bid" class="btn btn-outline-primary-2"><span>GO BID</span><i class="icon-long-arrow-right"></i></a>
                                </div><!-- .End .tab-pane -->

                                <div class="tab-pane fade" id="tab-watchs" role="tabpanel" aria-labelledby="tab-watchs-link">
                                    <p>No watchlist has been made yet.</p>
                                    <a href="/watchs" class="btn btn-outline-primary-2"><span>Go to Market</span><i class="icon-long-arrow-right"></i></a>
                                </div><!-- .End .tab-pane -->

                                <div class="tab-pane fade" id="tab-address" role="tabpanel" aria-labelledby="tab-address-link">
                                    <p>The following addresses will be used on the checkout page by default.</p>

                                    <div class="row">
                                        <div class="col-lg-6">
                                            <div class="card card-dashboard">
                                                <div class="card-body">
                                                    <h3 class="card-title">Billing Address</h3><!-- End .card-title -->

                                                    <div id="bill-address"
                                                        hx-get="/my-address?tipe=billing"               
                                                        hx-swap="innerHtml"
                                                        hx-target="#bill-address"
                                                        hx-indicator=".htmx-loader"
                                                        hx-trigger="load"
                                                    >
                                                        <br>
                                                    </div>
                                                    <a href="#billing-address-modal" data-toggle="modal" onclick="document.getElementById('success_billing').innerHTML = '';">Edit <i class="icon-edit"></i></a>
                                                </div><!-- End .card-body -->
                                            </div><!-- End .card-dashboard -->
                                        </div><!-- End .col-lg-6 -->

                                        <div class="col-lg-6">
                                            <div class="card card-dashboard">
                                                <div class="card-body">
                                                    <h3 class="card-title">Shipping Address</h3><!-- End .card-title -->
                                                    <div id="bill-shipping"
                                                        hx-get="/my-address?tipe=shipping"               
                                                        hx-swap="innerHtml"
                                                        hx-target="#bill-shipping"
                                                        hx-indicator=".htmx-loader"
                                                        hx-trigger="load"
                                                    >
                                                        <br>
                                                    </div>
                                                    <a href="#shipping-address-modal" data-toggle="modal" onclick="document.getElementById('success_shipping').innerHTML = '';">Edit <i class="icon-edit"></i></a>
                                                </div><!-- End .card-body -->
                                            </div><!-- End .card-dashboard -->
                                        </div><!-- End .col-lg-6 -->
                                    </div><!-- End .row -->
                                </div><!-- .End .tab-pane -->

                                <div class="tab-pane fade" id="tab-account" role="tabpanel" aria-labelledby="tab-account-link"
                                    hx-get="/my-account"               
                                    hx-swap="innerHtml"
                                    hx-target="#tab-account"
                                    hx-indicator=".htmx-loader"
                                    hx-trigger="load"
                                >
                                    
                                </div><!-- .End .tab-pane -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

templ TabAccount(user models.User) {
    <form id="account-form"
        hx-disabled-elt="#account-button"
        hx-post="/save-account"
        hx-swap="none"
        hx-on::before-request="document.getElementById('error_account').innerHTML = '';document.getElementById('success_account').innerHTML = ''"
        hx-on::after-request="if(event.detail.xhr.status==200) {
                                    document.getElementById('current_password').value = '';
                                    document.getElementById('new_password').value = '';
                                    document.getElementById('confirm_password').value = '';
                                    document.getElementById('error_account').innerHTML = '';
                                } else {
                                    document.getElementById('success_account').innerHTML = ''
                                }"
        hx-target-400="#error_account"
        hx-indicator=".htmx-loader"
    >
        <div class="row">
            <div class="col-sm-6">
                <label>Username *</label>
                <input type="text" class="form-control" id="username" name="username" disabled value={user.Username}>
            </div><!-- End .col-sm-6 -->

            <div class="col-sm-6">
            </div><!-- End .col-sm-6 -->
        </div><!-- End .row -->

        <label>Name *</label>
        <input type="text" class="form-control" id="name" name="name" required value={user.Name}>

        <label>Email address *</label>
        <input type="email" class="form-control" id="email" name="email" required value={user.Email}>

        <label>Current password *</label>
        <input type="password" class="form-control" id="current_password" name="current_password" required>

        <label>New password (leave blank to leave unchanged)</label>
        <input type="password" class="form-control" id="new_password" name="new_password">

        <label>Confirm new password</label>
        <input type="password" class="form-control mb-2" id="confirm_password" name="confirm_password">
        <span id="error_account"></span>
        <span id="success_account"></span> 
        <button id="account-button" type="submit" class="btn btn-outline-primary-2">
            <span>SAVE CHANGES</span>
            <i class="icon-long-arrow-right"></i>
        </button>
    </form>
}

templ TabAddress(tipe string, address models.Address) {
    if tipe == "billing" {
        <p id="billing_address">
            if address.ID != "" {
                <span id="b_name">{address.BillName}</span><br>
                <span id="b_phone">{address.BillPhone}</span><br>
                <span id="b_address">{address.BillAddress}</span><br>
                <span id="b_city">{address.BillCity}</span><br>
                <span id="b_postal_code">{address.BillPostalCode}</span><br>
                <span id="b_country">{address.BillCountry}</span><br>
            } else {
                You have not set up this type of address yet.<br>
            }
        </p>
    } else {
        <p id="shipping_address">
            if address.ID != "" {
                <span id="s_name">{address.ShipName}</span><br>
                <span id="s_phone">{address.ShipPhone}</span><br>
                <span id="s_address">{address.ShipAddress}</span><br>
                <span id="s_city">{address.ShipCity}</span><br>
                <span id="s_postal_code">{address.ShipPostalCode}</span><br>
                <span id="s_country">{address.ShipCountry}</span><br>
            } else {
                You have not set up this type of address yet.<br>
            }
        </p>
    }
    @EditAddress(tipe, address)
}

templ EditAddress(tipe string, address models.Address) {
    <div class="modal fade" id={fmt.Sprintf("%s-address-modal", tipe)} tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"><i class="icon-close"></i></span>
                    </button>

                    <div class="form-box">
                        <div class="form-tab">
                            <ul class="nav nav-pills nav-fill nav-border-anim" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="address-tab" data-toggle="tab" 
                                        href="#address"  role="tab" aria-controls={tipe} aria-selected="true"
                                    >Address {tipe}</a>
                                </li>
                            </ul>
                            <div class="tab-content" id="tab-content-5">
                                <div class="tab-pane fade show active" id={fmt.Sprintf("%s-tab", tipe)} role="tabpanel" aria-labelledby={fmt.Sprintf("%s-tab", tipe)} >
                                    <form id={fmt.Sprintf("%s-form", tipe)} 
                                        hx-disabled-elt={fmt.Sprintf("#%s-button", tipe)} 
                                        hx-post={fmt.Sprintf("/save-address?tipe=%s" , tipe)}               
                                        hx-swap="none"
                                        hx-on::before-request="document.getElementById('error_billing').innerHTML = '';document.getElementById('error_shipping').innerHTML = '';
                                                                document.getElementById('success_billing').innerHTML = '';document.getElementById('success_shipping').innerHTML = '';"
                                        hx-on::after-request="if(event.detail.xhr.status==200) {
                                                                    document.getElementById('b_name').innerHTML = document.getElementById('bill_name').value;
                                                                    document.getElementById('b_address').innerHTML = document.getElementById('bill_address').value;
                                                                    document.getElementById('b_phone').innerHTML = document.getElementById('bill_phone').value;
                                                                    document.getElementById('b_city').innerHTML = document.getElementById('bill_city').value;
                                                                    document.getElementById('b_postal_code').innerHTML = document.getElementById('bill_postal_code').value;
                                                                    document.getElementById('b_country').innerHTML = document.getElementById('bill_country').value;
                                                                    document.getElementById('s_name').innerHTML = document.getElementById('ship_name').value;
                                                                    document.getElementById('s_address').innerHTML = document.getElementById('ship_address').value;
                                                                    document.getElementById('s_phone').innerHTML = document.getElementById('ship_phone').value;
                                                                    document.getElementById('s_city').innerHTML = document.getElementById('ship_city').value;
                                                                    document.getElementById('s_postal_code').innerHTML = document.getElementById('ship_postal_code').value;
                                                                    document.getElementById('s_country').innerHTML = document.getElementById('ship_country').value;
                                                                }"
                                        hx-target-400={fmt.Sprintf("#error_%s", tipe)}
                                        hx-indicator=".htmx-loader"
                                    >
                                        <div class="form-group">
                                            <label for="name">Name</label>
                                            <input type="text" class="form-control" id={fmt.Sprintf("%s_name", tipe[0:4])} name={fmt.Sprintf("%s_name", tipe[0:4])} required
                                                if tipe=="billing" {
                                                    value={address.BillName}
                                                } else {
                                                    value={address.ShipName}
                                                }
                                            >
                                        </div>
                                        <div class="form-group">
                                            <label for="phone">Phone</label>
                                            <input type="text" class="form-control" id={fmt.Sprintf("%s_phone", tipe[0:4])} name={fmt.Sprintf("%s_phone", tipe[0:4])} required
                                                if tipe=="billing" {
                                                    value={address.BillPhone}
                                                } else {
                                                    value={address.ShipPhone}
                                                }
                                            >
                                        </div>
                                        <div class="form-group">
                                            <label for="address">Address</label>
                                            <input type="text" class="form-control" id={fmt.Sprintf("%s_address", tipe[0:4])} name={fmt.Sprintf("%s_address", tipe[0:4])} required
                                                if tipe=="billing" {
                                                    value={address.BillAddress}
                                                } else {
                                                    value={address.ShipAddress}
                                                }
                                            > 
                                        </div>
                                        <div class="form-group">
                                            <label for="city">City</label>
                                            <input type="text" class="form-control" id={fmt.Sprintf("%s_city", tipe[0:4])} name={fmt.Sprintf("%s_city", tipe[0:4])} required
                                                if tipe=="billing" {
                                                    value={address.BillCity}
                                                } else {
                                                    value={address.ShipCity}
                                                }
                                            >
                                        </div>
                                        <div class="form-group">
                                            <label for="postal_code">Postal Code</label>
                                            <input type="text" class="form-control" id={fmt.Sprintf("%s_postal_code", tipe[0:4])} name={fmt.Sprintf("%s_postal_code", tipe[0:4])} required
                                                if tipe=="billing" {
                                                    value={address.BillPostalCode}
                                                } else {
                                                    value={address.ShipPostalCode}
                                                }
                                            >
                                        </div>
                                        <div class="form-group">
                                            <label for="country">Country</label>
                                            <input type="text" class="form-control" id={fmt.Sprintf("%s_country", tipe[0:4])} name={fmt.Sprintf("%s_country", tipe[0:4])} required
                                                if tipe=="billing" {
                                                    value={address.BillCountry}
                                                } else {
                                                    value={address.ShipCountry}
                                                }
                                            >
                                        </div>
                                        <span id={fmt.Sprintf("error_%s", tipe)}></span>
                                        <span id={fmt.Sprintf("success_%s", tipe)}></span>
                                        <button type="submit" class="btn btn-primary mt-1" id={fmt.Sprintf("%s-button", tipe)}>Save</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>  
                </div>
            </div>
        </div>
    </div>
}

templ TabSell(page int, size int, count int64, sells []models.Item) {
    if len(sells) == 0 {
        <p>No offer has been made yet.</p>
        <a href="/sell" class="btn btn-outline-primary-2"><span>GO SELL</span><i class="icon-long-arrow-right"></i></a>
    } else {
        // <div class="container">
            for _, sell := range sells {
                <article class="entry entry-list">
                    <div class="row align-items-center">
                        <div class="col-md-2 product product-2">
                            <figure class="product-media">
                                if (sell.Date.AddDate(0,0,sell.Duration)).Before(time.Now()) {
                                    <span class="product-label label-circle label-sale" 
                                        style="opacity: 0.8;
                                                left:0.1rem;
                                                top:0.3rem;
                                                font-size:9px;
                                                width: 3.3rem;
                                                height: 3.3rem;"
                                    >Closed</span>
                                }
                                <a href="#">
                                    <img src={sell.Photo} alt={sell.Name} class="product-image">
                                </a>

                                <div class="product-action-vertical" style="top:0.4rem;right:0.2rem;">
                                    // <a href="#" class="btn-product-icon btn-wishlist" title="Remove from wishlist" 
                                    //     style="border-color:#df4625;background-color:#df4625;color:#ffffff">
                                    // </a>
                                    // <a href="#" class="btn-product-icon btn-wishlist" title="Add to wishlist" 
                                    //     style="border-color:#ffffff;background-color:#ffffff;color:#df4625">
                                    // </a>
                                </div>

                                // <div class="product-action product-action-dark">
                                //     <a href="#" class="btn-product btn-cart" title="Add to cart"><span>add to cart</span></a>
                                //     <a href="popup/quickView.html" class="btn-product btn-quickview" title="Quick view"><span>quick view</span></a>
                                // </div><!-- End .product-action -->
                            </figure><!-- End .product-media -->
                        </div><!-- End .col-md-4 -->
                        <div class="col-md-7">
                            <div class="entry-body">
                                <h2 class="entry-title">
                                    <a href={templ.SafeURL(fmt.Sprintf("/item?id=%s", sell.ID))}>{sell.Name}</a>
                                </h2><!-- End .entry-title -->

                                <div class="entry-meta">
                                    <span class="entry-author">
                                        by <a href="#">{sell.User.Username}</a>
                                    </span>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{sell.Date.Format("January, 02 2006")}</a>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{strconv.Itoa(len(sell.Bids))} Bids</a>
                                </div><!-- End .entry-meta -->

                                <div class="entry-cats">
                                    in <a href="#">{sell.Category.Name}</a>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{sell.Currency.Code}{fmt.Sprintf("%.2f", sell.OpenBid)} </a>
                                </div><!-- End .entry-cats -->

                                <div class="entry-content">
                                    <p>
                                        if len(sell.Description) > 100 {
                                            {sell.Description[0:100]} ...
                                        } else {
                                            {sell.Description}
                                        }
                                    </p>
                                    // <a href="/" class="read-more">Continue</a>
                                </div><!-- End .entry-content -->
                            </div><!-- End .entry-body -->
                        </div><!-- End .col-md-8 -->
                    </div>
                </article>
            }
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li 
                        if page == 1 {
                            class="page-item disabled"
                        } else {
                            class="page-item"
                        }
                    >
                        <a class="page-link page-link-prev" href="#" aria-label="Previous" tabindex="-1" 
                            if page == 1 {
                                class="page-item disabled"
                            } 
                            hx-get={fmt.Sprintf("/my-sells?page=%v&size=%v",(page-1),size)}
                            hx-swap="innerHtml"
                            hx-target="#tab-sells"
                            hx-indicator=".htmx-loader"
                        >
                            <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                        </a>
                    </li>
                    for i := 1; i<=int(math.Ceil(float64(float64(count) / float64(size)))); i++ {
                        if page==i {
                            <li class="page-item active" aria-current="page"><a class="page-link" href="#">{strconv.Itoa(i)}</a></li>
                        } else {
                            <li class="page-item"><a class="page-link" href="#"
                                hx-get={fmt.Sprintf("/my-sells?page=%v&size=%v",(i),size)}
                                hx-swap="innerHtml"
                                hx-target="#tab-sells"
                                hx-indicator=".htmx-loader"
                            >{strconv.Itoa(i)}</a></li>
                        }
                    }
                    // <li class="page-item active" aria-current="page"><a class="page-link" href="#">1</a></li>
                    // <li class="page-item"><a class="page-link" href="#">2</a></li>
                    // <li class="page-item"><a class="page-link" href="#">3</a></li>
                    // <li class="page-item-total">of 6</li>
                    <li 
                        if page==int(math.Ceil(float64(float64(count) / float64(size)))) {
                            class="page-item disabled"
                        } else {
                            class="page-item"
                        }
                    >
                        <a class="page-link page-link-next" href="#" aria-label="Next"
                            hx-get={fmt.Sprintf("/my-sells?page=%v&size=%v",(page+1),size)}
                            hx-swap="innerHtml"
                            hx-target="#tab-sells"
                            hx-indicator=".htmx-loader"
                        >
                            Next <span aria-hidden="true"><i class="icon-long-arrow-right"
                            if page==int(math.Ceil(float64(float64(count) / float64(size)))) {
                                class="page-item disabled"
                            }
                            ></i></span>
                        </a>
                    </li>
                </ul>
            </nav>
        // </div>
    }
    
}

templ TabBid(page int, size int, count int64, bids []models.Bid) {
    if len(bids) == 0 {
        <p>No bid has been made yet.</p>
        <a href="/bid" class="btn btn-outline-primary-2"><span>GO BID</span><i class="icon-long-arrow-right"></i></a>
    } else {
        // <div class="container">
            for _, bid := range bids {
                <article class="entry entry-list">
                    <div class="row align-items-center">
                        <div class="col-md-2 product product-2">
                            <figure class="product-media">
                                if (bid.Item.Date.AddDate(0,0,bid.Item.Duration)).Before(time.Now()) {
                                    <span class="product-label label-circle label-sale" 
                                        style="opacity: 0.8;
                                                left:0.1rem;
                                                top:0.3rem;
                                                font-size:9px;
                                                width: 3.3rem;
                                                height: 3.3rem;"
                                    >Closed</span>
                                }
                                <a href="#">
                                    <img src={bid.Item.Photo} alt={bid.Item.Name} class="product-image">
                                </a>
                                
                                <div id={bid.Item.ID} class="product-action-vertical" style="top:0.4rem;right:0.2rem;"
                                    hx-get={fmt.Sprintf("/add-remove-watchlist/?item_id=%s",bid.Item.ID)}             
                                    hx-swap="innerHtml"
                                    hx-trigger="click"
                                    hx-indicator=".htmx-loader">
                                    @components.AddRemoveWatchlist(bid.Watchlist.ID, true)
                                    // if bid.Watchlist.ID != "" {
                                    //     <a href="#" class="btn-product-icon btn-wishlist" title="Remove from wishlist" 
                                    //         style="border-color:#df4625;background-color:#df4625;color:#ffffff">
                                    //     </a>
                                    // } else {
                                    //     <a href="#" class="btn-product-icon btn-wishlist" title="Add to wishlist" 
                                    //         style="border-color:#ffffff;background-color:#ffffff;color:#df4625">
                                    //     </a>
                                    // }
                                </div>

                                // <div class="product-action product-action-dark">
                                //     <a href="#" class="btn-product btn-cart" title="Add to cart"><span>add to cart</span></a>
                                //     <a href="popup/quickView.html" class="btn-product btn-quickview" title="Quick view"><span>quick view</span></a>
                                // </div><!-- End .product-action -->
                            </figure><!-- End .product-media -->
                            // <figure class="entry-media">
                            //     <a href="#">
                            //         <img src={bid.Item.Photo} alt={bid.Item.Name} style="max-width: fit-content; ">
                            //     </a>
                            // </figure><!-- End .entry-media -->
                        </div><!-- End .col-md-4 -->
                        <div class="col-md-7">
                            <div class="entry-body">
                                <h2 class="entry-title">
                                    <a href={templ.SafeURL(fmt.Sprintf("/item?id=%s", bid.Item.ID))}>{bid.Item.Name}</a>
                                </h2><!-- End .entry-title -->

                                <div class="entry-meta">
                                    <span class="entry-author">
                                        by <a href="#">{bid.Item.User.Username}</a>
                                    </span>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{bid.Item.Date.Format("January, 02 2006")}</a>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{strconv.Itoa(len(bid.Item.Bids))} Bids</a>
                                </div><!-- End .entry-meta -->

                                <div class="entry-cats">
                                    in <a href="#">{bid.Item.Category.Name}</a>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{bid.Item.Currency.Code} {fmt.Sprintf("%.2f", bid.Bid)} </a>
                                </div><!-- End .entry-cats -->

                                <div class="entry-content">
                                    <p>
                                        if len(bid.Item.Description) > 100 {
                                            {bid.Item.Description[0:100]} ... 
                                        } else {
                                            {bid.Item.Description}
                                        } 
                                    </p>
                                    // <a href="/" class="read-more">Continue</a>
                                </div><!-- End .entry-content -->
                            </div><!-- End .entry-body -->
                        </div><!-- End .col-md-8 -->
                    </div>
                </article>
            }
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li 
                        if page == 1 {
                            class="page-item disabled"
                        } else {
                            class="page-item"
                        }
                    >
                        <a class="page-link page-link-prev" href="#" aria-label="Previous" tabindex="-1" 
                            if page == 1 {
                                class="page-item disabled"
                            } 
                            hx-get={fmt.Sprintf("/my-bids?page=%v&size=%v",(page-1),size)}
                            hx-swap="innerHtml"
                            hx-target="#tab-bids"
                            hx-indicator=".htmx-loader"
                        >
                            <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                        </a>
                    </li>
                    for i := 1; i<=int(math.Ceil(float64(float64(count) / float64(size)))); i++ {
                        if page==i {
                            <li class="page-item active" aria-current="page"><a class="page-link" href="#">{strconv.Itoa(i)}</a></li>
                        } else {
                            <li class="page-item"><a class="page-link" href="#"
                                hx-get={fmt.Sprintf("/my-bids?page=%v&size=%v",(i),size)}
                                hx-swap="innerHtml"
                                hx-target="#tab-bids"
                                hx-indicator=".htmx-loader"
                            >{strconv.Itoa(i)}</a></li>
                        }
                    }
                    // <li class="page-item active" aria-current="page"><a class="page-link" href="#">1</a></li>
                    // <li class="page-item"><a class="page-link" href="#">2</a></li>
                    // <li class="page-item"><a class="page-link" href="#">3</a></li>
                    // <li class="page-item-total">of 6</li>
                    <li 
                        if page==int(math.Ceil(float64(float64(count) / float64(size)))) {
                            class="page-item disabled"
                        } else {
                            class="page-item"
                        }
                    >
                        <a class="page-link page-link-next" href="#" aria-label="Next"
                            hx-get={fmt.Sprintf("/my-bids?page=%v&size=%v",(page+1),size)}
                            hx-swap="innerHtml"
                            hx-target="#tab-bids"
                            hx-indicator=".htmx-loader"
                        >
                            Next <span aria-hidden="true"><i class="icon-long-arrow-right"
                            if page==int(math.Ceil(float64(float64(count) / float64(size)))) {
                                class="page-item disabled"
                            }
                            ></i></span>
                        </a>
                    </li>
                </ul>
            </nav>
        // </div>
    }
    
}

templ TabWatch(page int, size int, count int64, watchs []models.Watchlist) {
    if len(watchs) == 0 {
        <p>No watchlist has been made yet.</p>
        <a href="/bid" class="btn btn-outline-primary-2"><span>Go To Market</span><i class="icon-long-arrow-right"></i></a>
    } else {
        // <div class="container">
            for _, watch := range watchs {
                <article class="entry entry-list">
                    <div class="row align-items-center">
                        <div class="col-md-2 product product-2">
                            <figure class="product-media">
                                if (watch.Item.Date.AddDate(0,0,watch.Item.Duration)).Before(time.Now()) {
                                    <span class="product-label label-circle label-sale" 
                                        style="opacity: 0.8;
                                                left:0.1rem;
                                                top:0.3rem;
                                                font-size:9px;
                                                width: 3.3rem;
                                                height: 3.3rem;"
                                    >Closed</span>
                                }
                                <a href="#">
                                    <img src={watch.Item.Photo} alt={watch.Item.Name} class="product-image">
                                </a>
                                
                                <div id={watch.Item.ID} class="product-action-vertical" style="top:0.4rem;right:0.2rem;"
                                    hx-get={fmt.Sprintf("/add-remove-watchlist/?item_id=%s",watch.Item.ID)}             
                                    hx-swap="innerHtml"
                                    hx-trigger="click"
                                    hx-indicator=".htmx-loader">
                                    @components.AddRemoveWatchlist(watch.ID, true)
                                    // if bid.Watchlist.ID != "" {
                                    //     <a href="#" class="btn-product-icon btn-wishlist" title="Remove from wishlist" 
                                    //         style="border-color:#df4625;background-color:#df4625;color:#ffffff">
                                    //     </a>
                                    // } else {
                                    //     <a href="#" class="btn-product-icon btn-wishlist" title="Add to wishlist" 
                                    //         style="border-color:#ffffff;background-color:#ffffff;color:#df4625">
                                    //     </a>
                                    // }
                                </div>

                                // <div class="product-action product-action-dark">
                                //     <a href="#" class="btn-product btn-cart" title="Add to cart"><span>add to cart</span></a>
                                //     <a href="popup/quickView.html" class="btn-product btn-quickview" title="Quick view"><span>quick view</span></a>
                                // </div><!-- End .product-action -->
                            </figure><!-- End .product-media -->
                            // <figure class="entry-media">
                            //     <a href="#">
                            //         <img src={watch.Item.Photo} alt={watch.Item.Name} style="max-width: fit-content; ">
                            //     </a>
                            // </figure><!-- End .entry-media -->
                        </div><!-- End .col-md-4 -->
                        <div class="col-md-7">
                            <div class="entry-body">
                                <h2 class="entry-title">
                                    <a href={templ.SafeURL(fmt.Sprintf("/item?id=%s", watch.Item.ID))}>{watch.Item.Name}</a>
                                </h2><!-- End .entry-title -->

                                <div class="entry-meta">
                                    <span class="entry-author">
                                        by <a href="#">{watch.Item.User.Username}</a>
                                    </span>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{watch.Item.Date.Format("January, 02 2006")}</a>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{strconv.Itoa(len(watch.Item.Bids))} Bids</a>
                                </div><!-- End .entry-meta -->

                                <div class="entry-cats">
                                    in <a href="#">{watch.Item.Category.Name}</a>
                                    <span class="meta-separator">|</span>
                                    <a href="#">{watch.Item.Currency.Code}{fmt.Sprintf("%.2f", watch.Item.OpenBid)} </a>
                                </div><!-- End .entry-cats -->

                                <div class="entry-content">
                                    <p>
                                        if len(watch.Item.Description) > 100 {
                                            {watch.Item.Description[0:100]} ... 
                                        } else {
                                            {watch.Item.Description}
                                        } 
                                    </p>
                                    // <a href="/" class="read-more">Continue</a>
                                </div><!-- End .entry-content -->
                            </div><!-- End .entry-body -->
                        </div><!-- End .col-md-8 -->
                    </div>
                </article>
            }
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li 
                        if page == 1 {
                            class="page-item disabled"
                        } else {
                            class="page-item"
                        }
                    >
                        <a class="page-link page-link-prev" href="#" aria-label="Previous" tabindex="-1" 
                            if page == 1 {
                                class="page-item disabled"
                            } 
                            hx-get={fmt.Sprintf("/my-watchs?page=%v&size=%v",(page-1),size)}
                            hx-swap="innerHtml"
                            hx-target="#tab-watchs"
                            hx-indicator=".htmx-loader"
                        >
                            <span aria-hidden="true"><i class="icon-long-arrow-left"></i></span>Prev
                        </a>
                    </li>
                    for i := 1; i<=int(math.Ceil(float64(float64(count) / float64(size)))); i++ {
                        if page==i {
                            <li class="page-item active" aria-current="page"><a class="page-link" href="#">{strconv.Itoa(i)}</a></li>
                        } else {
                            <li class="page-item"><a class="page-link" href="#"
                                hx-get={fmt.Sprintf("/my-watchs?page=%v&size=%v",(i),size)}
                                hx-swap="innerHtml"
                                hx-target="#tab-watchs"
                                hx-indicator=".htmx-loader"
                            >{strconv.Itoa(i)}</a></li>
                        }
                    }
                    // <li class="page-item active" aria-current="page"><a class="page-link" href="#">1</a></li>
                    // <li class="page-item"><a class="page-link" href="#">2</a></li>
                    // <li class="page-item"><a class="page-link" href="#">3</a></li>
                    // <li class="page-item-total">of 6</li>
                    <li 
                        if page==int(math.Ceil(float64(float64(count) / float64(size)))) {
                            class="page-item disabled"
                        } else {
                            class="page-item"
                        }
                    >
                        <a class="page-link page-link-next" href="#" aria-label="Next"
                            hx-get={fmt.Sprintf("/my-watchs?page=%v&size=%v",(page+1),size)}
                            hx-swap="innerHtml"
                            hx-target="#tab-watchs"
                            hx-indicator=".htmx-loader"
                        >
                            Next <span aria-hidden="true"><i class="icon-long-arrow-right"
                            if page==int(math.Ceil(float64(float64(count) / float64(size)))) {
                                class="page-item disabled"
                            }
                            ></i></span>
                        </a>
                    </li>
                </ul>
            </nav>
        // </div>
    }
    
}