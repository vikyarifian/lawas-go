package components

import (
    "lawas-go/dto"
)

templ Layout(token dto.Token, isLoggedIn bool, title string) {
    @HtmlWrapper(token, isLoggedIn, title) {
        { children... }
	}
}

templ HtmlWrapper(token dto.Token, isLoggedIn bool, title string) {
    <!DOCTYPE html>
    <html lang="en">
        <script src="https://unpkg.com/htmx.org@2.0.1" integrity="sha384-QWGpdj554B4ETpJJC9z+ZHJcA/i59TyjxEPXiiUgN2WmTyV5OEZWCD6gQhgkdpB/" crossorigin="anonymous"></script>
        @HtmlHead(title)
        <style>
            /* Absolute Center Spinner */
			.screenloading {
				position: fixed;
				z-index: 999999;
				height: 2em;
				width: 2em;
				overflow: show;
				margin: auto;
				top: 0;
				left: 0;
				bottom: 0;
				right: 0;
			}

			/* Transparent Overlay */
			.screenloading:before {
				content: '';
				display: block;
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background: radial-gradient(rgba(122, 120, 120, 0.8), rgba(122, 120, 120, 0.8));
				background: -webkit-radial-gradient(rgba(122, 120, 120, 0.8), rgba(122, 120, 120, 0.8));
				opacity: 0.8;
			}

			/* :not(:required) hides these rules from IE9 and below */
			.screenloading:not(:required) {
				/* hide "loading..." text */
				font: 0/0 a;
				color: transparent;
				text-shadow: none;
				background-color: transparent;
				border: 0;
			}

			.screenloading:not(:required):after {
				content: '';
				display: block;
				font-size: 10px;
				width: 1em;
				height: 1em;
				margin-top: -0.5em;
				-webkit-animation: spinner 150ms infinite linear;
				-moz-animation: spinner 150ms infinite linear;
				-ms-animation: spinner 150ms infinite linear;
				-o-animation: spinner 150ms infinite linear;
				animation: spinner 150ms infinite linear;
				border-radius: 0.5em;
				-webkit-box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
				box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
				opacity: 1;
			}

			/* Animation */

			@-webkit-keyframes spinner {
				0% {
					-webkit-transform: rotate(0deg);
					-moz-transform: rotate(0deg);
					-ms-transform: rotate(0deg);
					-o-transform: rotate(0deg);
					transform: rotate(0deg);
				}
				100% {
					-webkit-transform: rotate(360deg);
					-moz-transform: rotate(360deg);
					-ms-transform: rotate(360deg);
					-o-transform: rotate(360deg);
					transform: rotate(360deg);
				}
			}
			@-moz-keyframes spinner {
				0% {
					-webkit-transform: rotate(0deg);
					-moz-transform: rotate(0deg);
					-ms-transform: rotate(0deg);
					-o-transform: rotate(0deg);
					transform: rotate(0deg);
				}
				100% {
					-webkit-transform: rotate(360deg);
					-moz-transform: rotate(360deg);
					-ms-transform: rotate(360deg);
					-o-transform: rotate(360deg);
					transform: rotate(360deg);
				}
			}
			@-o-keyframes spinner {
				0% {
					-webkit-transform: rotate(0deg);
					-moz-transform: rotate(0deg);
					-ms-transform: rotate(0deg);
					-o-transform: rotate(0deg);
					transform: rotate(0deg);
				}
				100% {
					-webkit-transform: rotate(360deg);
					-moz-transform: rotate(360deg);
					-ms-transform: rotate(360deg);
					-o-transform: rotate(360deg);
					transform: rotate(360deg);
				}
			}
			@keyframes spinner {
				0% {
					-webkit-transform: rotate(0deg);
					-moz-transform: rotate(0deg);
					-ms-transform: rotate(0deg);
					-o-transform: rotate(0deg);
					transform: rotate(0deg);
				}
				100% {
					-webkit-transform: rotate(360deg);
					-moz-transform: rotate(360deg);
					-ms-transform: rotate(360deg);
					-o-transform: rotate(360deg);
					transform: rotate(360deg);
				}
			}

            .htmx-loader {
				display: none;
			}

			.htmx-request .htmx-loader {
				display: block;
			}

			.htmx-request.htmx-loader {
				display: block;
			}

			/* Hide previously loaded content during HTMX request */
			.htmx-request .loaded-content {
				display: none;
			}

			.htmx-request.loaded-content {
				display: none;
			}

			.scoll-pane {
				overflow: auto;
				width: 40vw;
				height: 32vh;
				background: hsl(0, 0%, 100%);
				padding: 1rem;
				border-radius: 0.5rem;
			}

			::-webkit-scrollbar {
				width: 12px; /* Mostly for vertical scrollbars */
				height: 12px; /* Mostly for horizontal scrollbars */
			}
			::-webkit-scrollbar-thumb { /* Foreground */
				background: var(--scrollbar-foreground);
				background: rgb(255, 255, 255);
				border-radius: 999px;
				border: 3px solid transparent;
				background-clip: padding-box;
			}
			::-webkit-scrollbar-track { /* Background */
				background: var(--scrollbar-background);
				background: transparent;
			}
        </style>
        <body>
            <div class="page-wrapper">
                

                @HtmlHeader(token, isLoggedIn)
                
                <main class="main">

                    { children... }
                    
                    <div class="screenloading htmx-loader htmx-indicator">Loading&#8230;</div>
                    
                </main><!-- End .main -->
                
                @HtmlFooter()


                <!-- Mobile Menu -->
                <div class="mobile-menu-overlay"></div><!-- End .mobil-menu-overlay -->

                <div class="mobile-menu-container mobile-menu-light">
                    <div class="mobile-menu-wrapper">
                        <span class="mobile-menu-close"><i class="icon-close"></i></span>
                        
                        <form action="#" method="get" class="mobile-search">
                            <label for="mobile-search" class="sr-only">Search</label>
                            <input type="search" class="form-control" name="mobile-search" id="mobile-search" placeholder="Search in..." required>
                            <button class="btn btn-primary" type="submit"><i class="icon-search"></i></button>
                        </form>

                        <ul class="nav nav-pills-mobile nav-border-anim" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="mobile-menu-link" data-toggle="tab" href="#mobile-menu-tab" role="tab" aria-controls="mobile-menu-tab" aria-selected="true">Menu</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="mobile-cats-link" data-toggle="tab" href="#mobile-cats-tab" role="tab" aria-controls="mobile-cats-tab" aria-selected="false">Categories</a>
                            </li>
                        </ul>
                        
                        <div class="social-icons">
                            <a href="#" class="social-icon" target="_blank" title="Facebook"><i class="icon-facebook-f"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Twitter"><i class="icon-twitter"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Instagram"><i class="icon-instagram"></i></a>
                            <a href="#" class="social-icon" target="_blank" title="Youtube"><i class="icon-youtube"></i></a>
                        </div><!-- End .social-icons -->
                    </div><!-- End .mobile-menu-wrapper -->
                </div><!-- End .mobile-menu-container -->

                if isLoggedIn {
                    <div></div>
                } else {
                    @HtmlSignup()
                }

            </div>
        </body>
        <script>
            document.addEventListener("DOMContentLoaded", (event) => {
                document.body.addEventListener('htmx:beforeSwap', function(evt) {
                    if (evt.detail.xhr.status === 400) {
                        evt.detail.shouldSwap = true;
                        evt.detail.isError = false;
                    }
                });
            })	
        </script>
    </html>
}